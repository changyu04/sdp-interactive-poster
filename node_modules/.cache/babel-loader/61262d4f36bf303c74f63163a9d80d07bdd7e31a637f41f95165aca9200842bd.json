{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _bowser = require('bowser');\nvar _bowser2 = _interopRequireDefault(_bowser);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar vendorPrefixes = {\n  Webkit: ['chrome', 'safari', 'ios', 'android', 'phantom', 'opera', 'webos', 'blackberry', 'bada', 'tizen', 'chromium', 'vivaldi'],\n  Moz: ['firefox', 'seamonkey', 'sailfish'],\n  ms: ['msie', 'msedge']\n};\nvar browsers = {\n  chrome: [['chrome'], ['chromium']],\n  safari: [['safari']],\n  firefox: [['firefox']],\n  edge: [['msedge']],\n  opera: [['opera'], ['vivaldi']],\n  ios_saf: [['ios', 'mobile'], ['ios', 'tablet']],\n  ie: [['msie']],\n  op_mini: [['opera', 'mobile'], ['opera', 'tablet']],\n  and_uc: [['android', 'mobile'], ['android', 'tablet']],\n  android: [['android', 'mobile'], ['android', 'tablet']]\n};\nvar browserByInfo = function browserByInfo(info) {\n  if (info.firefox) {\n    return 'firefox';\n  }\n  var name = '';\n  Object.keys(browsers).forEach(function (browser) {\n    browsers[browser].forEach(function (condition) {\n      var match = 0;\n      condition.forEach(function (single) {\n        if (info[single]) {\n          match += 1;\n        }\n      });\n      if (condition.length === match) {\n        name = browser;\n      }\n    });\n  });\n  return name;\n};\n\n/**\n * Uses bowser to get default browser information such as version and name\n * Evaluates bowser info and adds vendorPrefix information\n * @param {string} userAgent - userAgent that gets evaluated\n */\n\nexports.default = function (userAgent) {\n  if (!userAgent) {\n    return false;\n  }\n  var info = _bowser2.default._detect(userAgent);\n  Object.keys(vendorPrefixes).forEach(function (prefix) {\n    vendorPrefixes[prefix].forEach(function (browser) {\n      if (info[browser]) {\n        info.prefix = {\n          inline: prefix,\n          css: '-' + prefix.toLowerCase() + '-'\n        };\n      }\n    });\n  });\n  info.browser = browserByInfo(info);\n\n  // For cordova IOS 8 the version is missing, set truncated osversion to prevent NaN\n  info.version = info.version ? parseFloat(info.version) : parseInt(parseFloat(info.osversion), 10);\n  info.osversion = parseFloat(info.osversion);\n\n  // iOS forces all browsers to use Safari under the hood\n  // as the Safari version seems to match the iOS version\n  // we just explicitely use the osversion instead\n  // https://github.com/rofrischmann/inline-style-prefixer/issues/72\n  if (info.browser === 'ios_saf' && info.version > info.osversion) {\n    info.version = info.osversion;\n    info.safari = true;\n  }\n\n  // seperate native android chrome\n  // https://github.com/rofrischmann/inline-style-prefixer/issues/45\n  if (info.browser === 'android' && info.chrome && info.version > 37) {\n    info.browser = 'and_chr';\n  }\n\n  // For android < 4.4 we want to check the osversion\n  // not the chrome version, see issue #26\n  // https://github.com/rofrischmann/inline-style-prefixer/issues/26\n  if (info.browser === 'android' && info.osversion < 5) {\n    info.version = info.osversion;\n  }\n  return info;\n};\nmodule.exports = exports['default'];","map":{"version":3,"names":["Object","defineProperty","exports","value","_bowser","require","_bowser2","_interopRequireDefault","obj","__esModule","default","vendorPrefixes","Webkit","Moz","ms","browsers","chrome","safari","firefox","edge","opera","ios_saf","ie","op_mini","and_uc","android","browserByInfo","info","name","keys","forEach","browser","condition","match","single","length","userAgent","_detect","prefix","inline","css","toLowerCase","version","parseFloat","parseInt","osversion","module"],"sources":["/Users/limchangyu/node_modules/inline-style-prefixer/lib/utils/getBrowserInformation.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _bowser = require('bowser');\n\nvar _bowser2 = _interopRequireDefault(_bowser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar vendorPrefixes = {\n  Webkit: ['chrome', 'safari', 'ios', 'android', 'phantom', 'opera', 'webos', 'blackberry', 'bada', 'tizen', 'chromium', 'vivaldi'],\n  Moz: ['firefox', 'seamonkey', 'sailfish'],\n  ms: ['msie', 'msedge']\n};\nvar browsers = {\n  chrome: [['chrome'], ['chromium']],\n  safari: [['safari']],\n  firefox: [['firefox']],\n  edge: [['msedge']],\n  opera: [['opera'], ['vivaldi']],\n  ios_saf: [['ios', 'mobile'], ['ios', 'tablet']],\n  ie: [['msie']],\n  op_mini: [['opera', 'mobile'], ['opera', 'tablet']],\n  and_uc: [['android', 'mobile'], ['android', 'tablet']],\n  android: [['android', 'mobile'], ['android', 'tablet']]\n};\n\nvar browserByInfo = function browserByInfo(info) {\n  if (info.firefox) {\n    return 'firefox';\n  }\n  var name = '';\n\n  Object.keys(browsers).forEach(function (browser) {\n    browsers[browser].forEach(function (condition) {\n      var match = 0;\n      condition.forEach(function (single) {\n        if (info[single]) {\n          match += 1;\n        }\n      });\n      if (condition.length === match) {\n        name = browser;\n      }\n    });\n  });\n\n  return name;\n};\n\n/**\n * Uses bowser to get default browser information such as version and name\n * Evaluates bowser info and adds vendorPrefix information\n * @param {string} userAgent - userAgent that gets evaluated\n */\n\nexports.default = function (userAgent) {\n  if (!userAgent) {\n    return false;\n  }\n  var info = _bowser2.default._detect(userAgent);\n\n  Object.keys(vendorPrefixes).forEach(function (prefix) {\n    vendorPrefixes[prefix].forEach(function (browser) {\n      if (info[browser]) {\n        info.prefix = {\n          inline: prefix,\n          css: '-' + prefix.toLowerCase() + '-'\n        };\n      }\n    });\n  });\n\n  info.browser = browserByInfo(info);\n\n  // For cordova IOS 8 the version is missing, set truncated osversion to prevent NaN\n  info.version = info.version ? parseFloat(info.version) : parseInt(parseFloat(info.osversion), 10);\n  info.osversion = parseFloat(info.osversion);\n\n  // iOS forces all browsers to use Safari under the hood\n  // as the Safari version seems to match the iOS version\n  // we just explicitely use the osversion instead\n  // https://github.com/rofrischmann/inline-style-prefixer/issues/72\n  if (info.browser === 'ios_saf' && info.version > info.osversion) {\n    info.version = info.osversion;\n    info.safari = true;\n  }\n\n  // seperate native android chrome\n  // https://github.com/rofrischmann/inline-style-prefixer/issues/45\n  if (info.browser === 'android' && info.chrome && info.version > 37) {\n    info.browser = 'and_chr';\n  }\n\n  // For android < 4.4 we want to check the osversion\n  // not the chrome version, see issue #26\n  // https://github.com/rofrischmann/inline-style-prefixer/issues/26\n  if (info.browser === 'android' && info.osversion < 5) {\n    info.version = info.osversion;\n  }\n\n  return info;\n};\n\nmodule.exports = exports['default'];"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}